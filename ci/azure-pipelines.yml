trigger:
  branches:
    include:
    - pipeline
resources:
  repositories:
  - repository: self
variables:
- name: srcdir
  value: '$(Build.SourcesDirectory)'
- name: tag
  value: '$(Build.BuildId)'
- name: group
  value: geosupport-environment
stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          docker build -f ./ci/Dockerfile -t mlipper/geoclient:$(tag) .
          docker run --name geoclient --rm -d mlipper/geoclient:$(tag)
          docker cp geoclient:/app/ci $(System.DefaultWorkingDirectory)
          docker cp geoclient:/app/geoclient.jar $(System.DefaultWorkingDirectory)
          docker stop geoclient
    - task: PublishTestResults@2
      inputs:
        mergeTestResults: true
        testRunner: JUnit
        testResultsFiles: $(System.DefaultWorkingDirectory)/ci/test-results/TEST-*.xml
        failTaskOnFailedTests: true
    - task: PublishCodeCoverageResults@2
      inputs:
        summaryFileLocation: $(System.DefaultWorkingDirectory)/ci/coverage/*-coverage.xml
        pathToSources: $(System.DefaultWorkingDirectory)/ci/src
        failIfCoverageEmpty: false
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/geoclient.jar
        publishLocation: pipeline
