plugins {
    id('gov.nyc.doitt.gis.geoclient.spring-boot-application')
}

group = "${group}.geoclient-service"

dependencies {
    implementation('gov.nyc.doitt.gis.geoclient.jni:geoclient-jni:2.0.1')
    implementation('gov.nyc.doitt.gis.geoclient.core:geoclient-core')
    implementation('gov.nyc.doitt.gis.geoclient.parser:geoclient-parser')
    implementation('org.apache.commons:commons-text')
    implementation('com.thoughtworks.xstream:xstream')
}

tasks.register('writeVersionProperties', WriteProperties) {
    properties(['jni.version': project.version, 'core.version': project.version, 'parser.version': project.version, 'service.version': project.version])
    destinationFile = file(new File(sourceSets.main.output.resourcesDir, 'version.properties'))
}

tasks.register('copyRuntimeDiagram', Copy) {
    from("${project.rootDir}/src/doc") {
        include 'geoclient-runtime.png'
    }
    into "${sourceSets.main.output.resourcesDir}/static/images"
}

processResources {
    dependsOn('writeVersionProperties', 'copyRuntimeDiagram')
}

springBoot {
    mainClass = 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
}

tasks.named('bootJar') {
    requiresUnpack "**/geoclient-jni-*.jar"
    //manifest {
    //    from project.sharedManifest
    //    attributes 'Start-Class': 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
    //}
    //with(project.licenseFilesSpec)
}

bootRun {
    args '--spring.profiles.active=bootRun'
    systemProperties = [ 'gc.jni.version': 'geoclient-jni-2' ]
}
